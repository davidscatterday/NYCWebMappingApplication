@model NYCMappingWebApp.Entities.ChangePasswordInfo

@{
    Layout = "~/Views/Shared/_EmptyLayout.cshtml";
    string infoMessage = TempData["InfoMessage"] as string;
    string errorMessage = TempData["ErrorMessage"] as string;
}

<h2 class="col-sm-offset-2">Change your password</h2>
<hr>
@if (infoMessage != null)
{
    <div class="form-group">
        <div class="alert alert-success fade in">
            @infoMessage
        </div>
    </div>
}
@if (errorMessage != null)
{
    <div class="form-group">
        <div class="alert alert-danger fade in">
            @errorMessage
        </div>
    </div>
}

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        @Html.ValidationSummary(true)

        <div class="form-group">
            <label class="col-sm-2 control-label">Old Password</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.OldPassword, new { @class = "form-control input-width-xlarge textBoxControl", id = "txtOldPassword", type = "password", autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.OldPassword, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">New Password</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.NewPassword, new { @class = "form-control input-width-xlarge textBoxControl", id = "txtNewPassword", type = "password", autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.NewPassword, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">Confirm Password</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.ConfirmPassword, new { @class = "form-control input-width-xlarge textBoxControl", id = "txtConfirmPassword", type = "password", autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-4">
                <input type="submit" value="Save" class="btn btn-primary btn-large" />
                @Html.ActionLink("Cancel", "Index", "Home", null, new { @class = "btn btn-primary btn-large" })
            </div>
        </div>
    </div>
}