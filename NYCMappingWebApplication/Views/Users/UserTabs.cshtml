@using GridMvc.Html
@using System.Configuration;
@model List<NYCMappingWebApp.Entities.UserTabs>

@{
    Layout = "~/Views/Shared/_LayoutPages.cshtml";
    string infoMessage = TempData["InfoMessage"] as string;
    string errorMessage = TempData["ErrorMessage"] as string;
}
<div class="container body-content">
    <h2>@ViewBag.Title</h2>
    @if (infoMessage != null)
    {
        <div class="form-group">
            <div class="alert alert-success fade in">
                @infoMessage
            </div>
        </div>
    }
    @if (errorMessage != null)
    {
        <div class="form-group">
            <div class="alert alert-danger fade in">
                @errorMessage
            </div>
        </div>
    }
    <div class="form-group">
        @Html.ActionLink("Add New User", "AddUserTab", "Users", new { @class = "btn btn-primary btn-large" })
    </div>
    <div class="form-group">
        @Html.Grid(Model).Columns(columns =>
    {
        columns.Add(model => model.Username, "Username")
            .Titled("Username")
            .SetWidth(30);
        columns.Add(model => model.TabNames, "TabNames")
            .Titled("Tabs")
            .SetWidth(30);
        columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .SetWidth(30)
            .RenderValueAs(model => isEditor(model));
        columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .SetWidth(30)
            .RenderValueAs(model => canDelete(model));
    }).WithPaging(20, 6, "grid1-page").Sortable().Filterable().WithMultipleFilters()
    </div>

    @helper isEditor(NYCMappingWebApp.Entities.UserTabs model)
    {
        <a href="@Url.Action("EditUserTab", "Users", new { ID = model.ID })">Edit</a>
    }

    @helper canDelete(NYCMappingWebApp.Entities.UserTabs model)
    {
        <a href="@Url.Action("DeleteUserTab", "Users", new { ID = model.ID })">Delete</a>
    }
</div>